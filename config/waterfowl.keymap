/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
        };
    };

    combos {
        compatible = "zmk,combos";

        l_br {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        r_br {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <5 6>;
        };

        l_par {
            bindings = <&kp LPAR>;
            key-positions = <13 14>;
        };

        l_brc {
            bindings = <&kp LBRC>;
            key-positions = <23 24>;
        };

        r_par {
            bindings = <&kp RPAR>;
            key-positions = <15 16>;
        };

        r_brc {
            bindings = <&kp RBRC>;
            key-positions = <25 26>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            /* QWERTY
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   Q  |   W  |   E  |   R  |   T  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   A  |   S  |   D  |   F  |   G  |                      |   H  |   J  |   K  |   L  |   ;  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |   Z  |   X  |   C  |   V  |   B  |  |  2  |    |  3  |  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */

            bindings = <
&kp Q        &kp W        &kp E         &kp R         &kp T    &kp Y  &kp U         &kp I          &kp O        &kp P
&hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G    &kp H  &hmr LSHFT J  &hmr LCTRL K   &hmr LALT L  &hmr LGUI SEMI
&kp Z        &kp X        &kp C         &kp V         &kp B    &kp N  &kp M         &kp COMMA      &kp DOT      &kp FSLH
&none        &gresc       &kp TAB       &lt 1 SPACE   &none    &none  &lt 2 ENTER   &kp BACKSPACE  &kp DEL      &none
            >;

            sensor-bindings = <
                &inc_dec_kp PAGE_DOWN PAGE_UP
                &inc_dec_kp C_VOL_DN C_VOL_UP
                &inc_dec_kp DOWN UP
                &inc_dec_kp LEFT RIGHT
            >;
        };

        num-sym {
            bindings = <
&kp LS(EXCL)  &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)   &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)      &kp LS(STAR)      &kp LS(LPAR)    &kp LS(RPAR)
&hml LCMD N1  &hml LALT N2  &hml LCTRL N3  &hml LSHFT N4  &kp N5           &kp MINUS      &hmr RSHFT EQUAL  &hmr RCTRL GRAVE  &hmr RALT BSLH  &hmr RGUI SQT
&kp N6        &kp N7        &kp N8         &kp N9         &kp N0           &kp LS(UNDER)  &kp LS(PLUS)      &kp LS(TILDE)     &kp LS(PIPE)    &kp LS(DQT)
&trans        &trans        &trans         &trans         &trans           &trans         &trans            &trans            &trans          &trans
            >;
        };

        nav-fn-media {
            bindings = <
&kp F1                &kp F2            &kp F3               &kp F4               &kp F5      &kp F6    &kp F7           &kp F8         &mt F11 F9       &mt F12 F10
&hml LGUI C_PREVIOUS  &hml LALT C_NEXT  &hml LCTRL C_VOL_DN  &hml LSHFT C_VOL_UP  &kp C_PP    &kp LEFT  &hmr RSHFT DOWN  &hmr RCTRL UP  &hmr RALT RIGHT  &trans
&trans                &trans            &trans               &trans               &trans      &kp LEFT  &kp DOWN         &kp UP         &kp RIGHT        &trans
&trans                &trans            &trans               &trans               &trans      &trans    &trans           &trans         &trans           &trans
            >;
        };

        sys {
            bindings = <
&sys_reset    &bootloader   &bt BT_CLR    &trans        &trans          &trans  &trans  &trans  &trans       &trans
&trans        &trans        &trans        &trans        &out OUT_TOG    &trans  &trans  &trans  &trans       &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &bootloader  &sys_reset
&trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans       &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
